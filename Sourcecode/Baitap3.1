import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.cluster import KMeans

# Bước 1: Đọc dữ liệu
df = pd.read_csv("results.csv")

# Bước 2: Tiền xử lý dữ liệu
# Giữ lại các cột số học
numeric_df = df.select_dtypes(include='number').dropna(axis=1)

# Chuẩn hóa dữ liệu
scaler = StandardScaler()
scaled_data = scaler.fit_transform(numeric_df)

# Bước 3: Xác định số cụm tối ưu bằng Elbow Method
inertia = []
K_range = range(1, 11)
for k in K_range:
    kmeans = KMeans(n_clusters=k, random_state=42, n_init='auto')
    kmeans.fit(scaled_data)
    inertia.append(kmeans.inertia_)

# Vẽ biểu đồ Elbow
plt.figure(figsize=(8, 5))
plt.plot(K_range, inertia, 'bo-')
plt.xlabel("Số cụm (k)")
plt.ylabel("Tổng sai số nội cụm (Inertia)")
plt.title("Biểu đồ Elbow xác định số cụm tối ưu")
plt.grid(True)
plt.tight_layout()
plt.savefig("elbow_plot.png")
plt.show()

# ====> GIẢ SỬ ĐIỂM KHUỶU LÀ K=3
optimal_k = 3

# Bước 4: Phân cụm bằng K-means với K tối ưu
kmeans = KMeans(n_clusters=optimal_k, random_state=42, n_init='auto')
labels = kmeans.fit_predict(scaled_data)
df["Cluster"] = labels

# Bước 5: Giảm chiều bằng PCA xuống 2D để trực quan hóa
pca = PCA(n_components=2)
pca_data = pca.fit_transform(scaled_data)

df["PCA1"] = pca_data[:, 0]
df["PCA2"] = pca_data[:, 1]

# Bước 6: Vẽ biểu đồ phân cụm 2D
plt.figure(figsize=(8, 6))
colors = ['red', 'green', 'blue', 'purple', 'orange']

for cluster in range(optimal_k):
    clustered = df[df["Cluster"] == cluster]
    plt.scatter(clustered["PCA1"], clustered["PCA2"], 
                label=f"Cluster {cluster}", alpha=0.7, color=colors[cluster])

plt.title("Biểu đồ phân cụm cầu thủ bằng K-means (PCA 2D)")
plt.xlabel("PCA Component 1")
plt.ylabel("PCA Component 2")
plt.legend()
plt.tight_layout()
plt.savefig("kmeans_pca_clusters.png")
plt.show()

# Bước 7: Lưu kết quả
df.to_csv("clustered_results.csv", index=False)
print(" Đã lưu phân cụm vào clustered_results.csv")

